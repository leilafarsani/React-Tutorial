# React-Tutorial
I am going to learn React. 

Topics to learn
- React Definition
- React App
- Components
- JSX 
- Props
- Conditional Rendering
- CSS in React
- Lists in React
- React States
- Crud in React
- React Lifecycle plus Use Efficiency
- API
- Fetching Data
- React Query
- React Hooks
- State Management
- Rooting in React
- React Forms with FormIK plus YUP
- Typescript in React
- React Best Practice
- Redux
- Optimization Techniques 
- Full Stack Project
- Testing in React

What is React?
React is a JavaScript library created by Facebook. It is used for making complex,
interactive user interfaces.  It can help us when creating UI or a website. 
It has become very popular in the last 5 years.

Using react has two methods. 
1. part of a website 
2. all the website, or Single Page Application (SPA) 
In this method, all the site considers as one component
and we have other components inside it.

Why has it become so popular?

It is fast and efficient
It is easy to understand & less verbose than the "vanilla" JS API
It helps separate functionality into small, understandable pieces
Using less codes 
Having massive community around it 
constantly updating  
Generally it makes our life easier and its using a lot in the world

React App
- when we create a new application it contains some folders and files such as
-README.md 
- gitignore sth for GitHub
- package-lock.json and package.json  (This comes when we start packages using npm)

- package.json is just json file that contains information about our project
and also dependencies that we have installed in our application. Its more
for doccumantation purposes and We can change them.

- node_modules contains all the packages and libraries that we have installed

- public folder witch contains a bunch of static files , logos , text files
and json files and also importantly an HTML file

BUT Why HTML file? When we are worlding on a react application, we are not 
creating HTML files. Because React provides us with a method of creating application
witch is a Single page application AND it means that our whole app exists in a 
one single HTML file witch is index.html . What happens is inside the index.html file
there is a div , a single div with a id of root and what react does is when you
enter in the website, react will grab all the code you write with javascript and put 
everything inside the div. One benefit of this is that we don't have to be downloading more 
files as we move our application. If we just have multiple HTML file for each page of 
our application we need to download that HTML file every single time you move on your app 
but with react its different and everything is downloaded before and we don't need to 
anything more when we navigate.

Our whole App will exist in JS files or Typescript file

Inside the index.js file we create a react element, a root to all of 
our code and we put inside the element in the html file with the id of root

***** Note that ***** All of the code in our project will initially
exist inside the App function in App.js file. 




What is a component?
Component is JS function that returns some sort of UI. some JSX
React heavily relies on a concept called "components". 
Components are like small Lego blocks for designing and developing user interfaces (UI). 
They can be stuck together in different ways to create new UI.

Let's have a look at an example: the GitHub header.
What are the logical "pieces" of UI? What could be a component?

Component tips
There are no hard & fast rules for making components. 
UIs can be split up into components in many different ways, 
requiring judgement based on your context.

Components should follow the Single Responsibility Principle
Each component should only have 1 "responsibility"
Should only do 1 thing
Components should have good, explicit names
This helps you to remember what the component's job is

Components are reusable and make our code to be less messy
We have to name them with capital letters


-WHAT IS JSX:
Its mixing HTML and JS together.
It means every single time you're gonna display some sort of UI in your
screen or a group of UIs, you're going to create a function that will return
some UI stuff, some HTML (Or better to say JSX as they are not really html )
this is a syntax presented by react witch makes it a lot easier to
mix rendering logic with UI stuff.
All of JSX will be rendered inside of some sort of JavaScript function 

******+
whenever we want to use any JS such as variables inside JSX we need to put it inside the {}
Note that we can create variables inside the JS function (JSX) using the html elements and return
them whenever we want.


-What is PROPS?
PropS is an JavaScript object that exists inside the argument of some sort of functions component.
